package action;

import java.io.PrintWriter;
import java.util.List;

import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;

import dao.LightningrecordDao;
import model.Lightningrecord;

public class LightningrecordAction extends ActionSupport{
	//struts action中方法的规范，1.只能是返回String 2 不能有参数，3 必须抛出异常
	//返回值的的字符串，就是方法执行完毕之后，跳转的下一个页面
	LightningrecordDao lightningrecordDao ;
	
	
	public LightningrecordAction() {
		super();
		lightningrecordDao = new LightningrecordDao();
	}
	public String getAll() throws Exception{
		ServletActionContext.getResponse().setCharacterEncoding("utf-8");
		ServletActionContext.getRequest().setCharacterEncoding("utf-8");
		ServletActionContext.getResponse().setContentType("text/html; charset=utf-8");
		List<Lightningrecord> Lightningrecords  = lightningrecordDao.getLightningrecord();//页面输出正确地址，这个方法就会被调用，
		//调用这个方法就执行了对应dao中对应的查询数据库的方法
//		PrintWriter out = ServletActionContext.getResponse().getWriter();
//		for(Teacher teacher:teachers){
//			out.println(teacher.getTname()+ " " + teacher.getSex());
//		}
		//将数据库中取出的集合存放到页面，javaweb服务器 内置了两个request 和 response分别代表接受用户请求，和与用户交互的输出对象
		//如果对象存放在request中，只要是同一个request 就一直能够找到自己存放的内容，如果经过了response的切换，再次请求已经是不同的request
		ServletActionContext.getRequest().setAttribute("Lightningrecords", Lightningrecords);
		return null;
	}

}